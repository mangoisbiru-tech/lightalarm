name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build web app
      run: npm run build

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

    - name: Make gradlew executable
      run: chmod +x android/gradlew

    - name: Sync Capacitor
      run: npx cap sync android

    - name: Build release APK
      run: cd android && ./gradlew assembleRelease

    - name: Sign APK (if keystore provided)
      if: ${{ secrets.ANDROID_KEYSTORE != '' }}
      run: |
        cd android
        ./gradlew assembleRelease \
          -Pandroid.injected.signing.store.file=${{ secrets.ANDROID_KEYSTORE }} \
          -Pandroid.injected.signing.store.password=${{ secrets.ANDROID_KEYSTORE_PASSWORD }} \
          -Pandroid.injected.signing.key.alias=${{ secrets.ANDROID_KEY_ALIAS }} \
          -Pandroid.injected.signing.key.password=${{ secrets.ANDROID_KEY_PASSWORD }}

    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          android/app/build/outputs/apk/release/app-release.apk
          build/
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

